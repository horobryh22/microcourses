name: deploy staging

on:
  push:
    branches:
      - main

# задаем переменную (используем ее для playwright, в config настраивали ее использование)
env:
  TEST_ENV_BASE_URL: https://staging.microcourses-pro.ru

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # стягиваем репозиторий на машину

      - name: Setup Node.js
        uses: actions/setup-node@v3  # плагин устанавливает ноду на машину
        with:
          node-version: 20.x.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Eslint-check
        run: npm run lint

      - name: Type-check
        run: npm run lint:types

      - name: Run tests
        run: npm run test

  deploy:
    needs: lint # указываем, что выполнение шага зависит от шага lint
    runs-on: ubuntu-latest
    concurrency: # чтобы не было несколько деплоев одновременно
      group: staging
      cancel-in-progress: true
    steps:
      - name: SSH Command
        uses: D3rHase/ssh-command-action@v0.2.2 # плагин для подключения по ssh
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          user: ${{ secrets.STAGING_SSH_USERNAME }}
          private_key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
          host_fingerprint: ${{ secrets.STAGING_SSH_FINGERPRINT }}
          command: source ~/.nvm/nvm.sh; chmod +x deploy.sh; ~/deploy.sh

  e2e:
    needs: deploy
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x.x

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
